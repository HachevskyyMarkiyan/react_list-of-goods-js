{"version":3,"sources":["App.jsx","index.jsx"],"names":["SORT_FIELD_NAME","SORT_FIELD_LENGTH","goodsFromServer","App","useState","reverse","setReverse","sortField","setSortField","visibleGoods","goods","preparedGoods","sort","firstGood","secondGood","localeCompare","length","getPreparedGoods","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKMA,EAAkB,OAClBC,EAAoB,SAEbC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UA4BK,IAAMC,EAAM,WACjB,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAkCF,mBAAS,IAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACMC,EA5BR,SAA0BC,EAAOH,EAAWF,GAC1C,IAAMM,EAAa,YAAOD,GAqB1B,OAnBIH,GACFI,EAAcC,MAAK,SAACC,EAAWC,GAC7B,OAAQP,GACN,KAAKP,EACH,OAAOa,EAAUE,cAAcD,GAEjC,KAAKb,EACH,OAAOY,EAAUG,OAASF,EAAWE,OAEvC,QACE,OAAO,MAKXX,GACFM,EAAcN,UAGTM,EAMcM,CAAiBf,EAAiBK,EAAWF,GAOlE,OACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CAAE,WAAYb,IAAcP,IAE9BqB,QAAS,kBAAMb,EAAaR,IAP9B,iCAYA,wBACEmB,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,WAAYb,IAAcN,IAE9BoB,QAAS,kBAAMb,EAAaP,IAP9B,4BAYA,wBACEkB,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,YAAaf,IAEjBgB,QAAS,kBAAiBf,GAAVD,IAPlB,qBAYEE,GAAaF,EACb,wBACEc,KAAK,SACLD,UAAU,4BACVG,QAAS,kBA/CjBb,EAAa,SACbF,GAAW,IA2CL,mBAQA,gCAIJ,6BACGG,EAAaa,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YC3GlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.33f03916.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\nimport { useState } from 'react';\n\nconst SORT_FIELD_NAME = 'name';\nconst SORT_FIELD_LENGTH = 'length';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nfunction getPreparedGoods(goods, sortField, reverse) {\n  const preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((firstGood, secondGood) => {\n      switch (sortField) {\n        case SORT_FIELD_NAME:\n          return firstGood.localeCompare(secondGood);\n\n        case SORT_FIELD_LENGTH:\n          return firstGood.length - secondGood.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reverse) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [reverse, setReverse] = useState(false);\n  const [sortField, setSortField] = useState('');\n  const visibleGoods = getPreparedGoods(goodsFromServer, sortField, reverse);\n\n  const reset = () => {\n    setSortField('');\n    setReverse(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-info',\n            { 'is-light': sortField !== SORT_FIELD_NAME },\n          )}\n          onClick={() => setSortField(SORT_FIELD_NAME)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-success',\n            { 'is-light': sortField !== SORT_FIELD_LENGTH },\n          )}\n          onClick={() => setSortField(SORT_FIELD_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-warning',\n            { 'is-light': !reverse },\n          )}\n          onClick={() => (reverse ? setReverse(false) : setReverse(true))}\n        >\n          Reverse\n        </button>\n\n        {(sortField || reverse) ? (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => reset()}\n          >\n            Reset\n          </button>\n        ) : (\n          <></>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li data-cy=\"Good\" key={good}>\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}